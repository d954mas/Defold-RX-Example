local COMMON = require "libs.common"
local SM = require "libs.sm.sm"
COMMON.LOG.set_appname("ggj2019")
COMMON.LOG.toggle_print()
COMMON.LOG.override_print()
math.randomseed(os.time())
local RX = require "libs.rx"
local WORLD = require "world.world"


if not defos then
    defos = {}
    local mt = {}
    function mt.__index(self, v)
        self[v] = function() end
        return self[v]
    end
    setmetatable(defos, mt)
end



local scenes = {
    require "scenes.logo.logo_scene",
}
function init(self)
    COMMON.input_acquire()
   -- defos.set_view_size(nil, nil, 960, 540)
    --region FIX module not found
    local reg_scenes = {}
    for i, v in ipairs(scenes) do
        reg_scenes[i] = v()
    end
    --endregion
    SM:register(reg_scenes)
    SM:show("LogoScene")
end

function update(self, dt)
    RX.MainScheduler:update(dt)
    SM:update(dt)
    WORLD:update(dt)
end

function final(self)
    COMMON.input_release()
end

function on_input(self, action_id, action, sender)
    if action_id == COMMON.HASHES.INPUT_TOGGLE_PROFILER and action.pressed then
        msg.post("@system:", COMMON.HASHES.INPUT_TOGGLE_PROFILER)
        return true
    end
end